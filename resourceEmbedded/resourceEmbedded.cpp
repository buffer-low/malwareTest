#include <Windows.h>
#include <iostream>
#include "resource.h"

int dropFile(LPSTR filename, LPSTR ID) {
	HRSRC hRsrc = FindResourceA(NULL, "DEBUGINFO", ID);
	if (hRsrc == NULL) {
		printf("FindResource Error. Exit\n");
		return 1;
	}
	HGLOBAL hGlobal = LoadResource(NULL, hRsrc);
	if (hGlobal == NULL) {
		printf("LoadResource Error\n");
		return 1;
	}
	DWORD size = SizeofResource(NULL, hRsrc);
	LPVOID data = LockResource(hGlobal);
	if (data != NULL) {
		HANDLE f = CreateFileA(
			filename,
			GENERIC_WRITE,
			0,
			NULL,
			CREATE_ALWAYS,
			FILE_ATTRIBUTE_NORMAL,
			NULL
		);
		if (f != NULL) {
			DWORD numberOfBytesWritten = 0;
			WriteFile(f, data, size, &numberOfBytesWritten, NULL);
			if (numberOfBytesWritten < size) {
				printf("Write Error: resource size: %d, written size: %d\n", size, numberOfBytesWritten);
				return 1;
			}
			CloseHandle(f);
			return 0;
		}

	}
	else return 1;
}

int main(int argc, LPSTR argv[])
{
	char dropFileName[100];
	memset(dropFileName, 0, 100);
	HRSRC hString = FindResourceA(NULL, "DEBUGINFO2", MAKEINTRESOURCEA(6));
	if (hString == NULL) strncpy_s(dropFileName, 13, "unknown.dump", 13);
	else {
		HGLOBAL stringRes = LoadResource(NULL, hString);
		LPSTR fName = (LPSTR)LockResource(stringRes);
		strncpy_s(dropFileName, 100, fName, strlen(fName));
		CloseHandle(stringRes);
		CloseHandle(hString);

	}
	printf("File name: %s\n", dropFileName);
	DWORD res = dropFile(dropFileName, MAKEINTRESOURCEA(300));

	char currentFileName[1000];
	
	
}
